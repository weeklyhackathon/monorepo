// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  path          String         @unique
  displayName   String
  farcasterUser FarcasterUser?
  githubUser    GithubUser?
  pullRequests  GithubPullRequest[]
}

model GithubUser {
  githubId  Int      @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  username  String   @unique
}

model FarcasterUser {
  farcasterId Int      @id
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  username    String   @unique
}


model GithubRepo {
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  name      String
  owner     String
  nameWithOwner String      @unique  
  reviewedAt DateTime?
  summary   String?
  productDescription String?
  technicalArchitecture String?
  pullRequests     GithubPullRequest[]


  @@unique([owner, name])
}




model GithubPullRequest {
  id         String     @id @default(uuid())
  submittedAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  submittedBy String
  submitter    User @relation(fields: [submittedBy], references: [id])

  number     Int
  analysedAt DateTime?
  productAnalysis String?
  technicalArchitecture String?
  githubRepoNameWithOwner String
  repo       GithubRepo @relation(fields: [githubRepoNameWithOwner], references: [nameWithOwner])


  @@unique([githubRepoNameWithOwner, number])
}

